{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst useGeoLocation = () => {\n  _s();\n\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error: {\n        code: error.code,\n        message: error.message\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return location;\n};\n\n_s(useGeoLocation, \"0fi+ayxgmLoNWCDCnfkmBRmgNTs=\");\n\nexport default useGeoLocation;","map":{"version":3,"names":["React","useState","useEffect","useGeoLocation","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","code","message","navigator","geolocation","getCurrentPosition"],"sources":["C:/Users/franc/Documents/React/wearther/src/components/useGeoLocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst useGeoLocation = () => {\r\n    const [location, setLocation] = useState({\r\n        loaded: false,\r\n        coordinates: { lat: \"\", lng: \"\" },\r\n    });\r\n\r\n    const onSuccess = (location) => {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n            },\r\n        });\r\n    };\r\n\r\n    const onError = (error) => {\r\n        setLocation({\r\n            loaded: true,\r\n            error: {\r\n                code: error.code,\r\n                message: error.message,\r\n            },\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!(\"geolocation\" in navigator)) {\r\n            onError({\r\n                code: 0,\r\n                message: \"Geolocation not supported\",\r\n            });\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n    }, []);\r\n\r\n    return location;\r\n};\r\n\r\nexport default useGeoLocation;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;IACrCK,MAAM,EAAE,KAD6B;IAErCC,WAAW,EAAE;MAAEC,GAAG,EAAE,EAAP;MAAWC,GAAG,EAAE;IAAhB;EAFwB,CAAD,CAAxC;;EAKA,MAAMC,SAAS,GAAIN,QAAD,IAAc;IAC5BC,WAAW,CAAC;MACRC,MAAM,EAAE,IADA;MAERC,WAAW,EAAE;QACTC,GAAG,EAAEJ,QAAQ,CAACO,MAAT,CAAgBC,QADZ;QAETH,GAAG,EAAEL,QAAQ,CAACO,MAAT,CAAgBE;MAFZ;IAFL,CAAD,CAAX;EAOH,CARD;;EAUA,MAAMC,OAAO,GAAIC,KAAD,IAAW;IACvBV,WAAW,CAAC;MACRC,MAAM,EAAE,IADA;MAERS,KAAK,EAAE;QACHC,IAAI,EAAED,KAAK,CAACC,IADT;QAEHC,OAAO,EAAEF,KAAK,CAACE;MAFZ;IAFC,CAAD,CAAX;EAOH,CARD;;EAUAf,SAAS,CAAC,MAAM;IACZ,IAAI,EAAE,iBAAiBgB,SAAnB,CAAJ,EAAmC;MAC/BJ,OAAO,CAAC;QACJE,IAAI,EAAE,CADF;QAEJC,OAAO,EAAE;MAFL,CAAD,CAAP;IAIH;;IAEDC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCV,SAAzC,EAAoDI,OAApD;EACH,CATQ,EASN,EATM,CAAT;EAWA,OAAOV,QAAP;AACH,CAtCD;;GAAMD,c;;AAwCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}