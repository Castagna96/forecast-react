{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { toBeEmpty } from \"@testing-library/jest-dom/dist/matchers\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Weather() {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const API_KEY = \"2fce26b3009e0a66de8c0a0223800869\"; // function get temp data\n\n  const getTempData = (api, query) => {\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${api}`;\n    fetch(url).then(res => {\n      return res.json();\n    }).then(res => {\n      setData(res.main);\n      setCity(query); // console.log(res.main);\n    }).catch(err => {\n      console.log(\"error in get data\", err);\n      setData(null);\n    });\n  }; // call use Effect for render data every search input\n\n\n  useEffect(() => {\n    getTempData(API_KEY, inputValue);\n  }, [inputValue]);\n}\n\n_s(Weather, \"jC1p3Y7my/c75H5uUejvU8mcbkc=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["toBeEmpty","React","useEffect","useState","Weather","inputValue","setInputValue","data","setData","city","setCity","API_KEY","getTempData","api","query","url","fetch","then","res","json","main","catch","err","console","log"],"sources":["C:/Users/franc/Documents/React/wearther/src/components/data.js"],"sourcesContent":["import { toBeEmpty } from \"@testing-library/jest-dom/dist/matchers\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Weather() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [data, setData] = useState(null);\r\n  const [city, setCity] = useState(\"\");\r\n  const API_KEY = \"2fce26b3009e0a66de8c0a0223800869\";\r\n\r\n  // function get temp data\r\n  const getTempData = (api, query) => {\r\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${api}`;\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        setData(res.main);\r\n        setCity(query);\r\n        // console.log(res.main);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in get data\", err);\r\n        setData(null);\r\n      });\r\n  };\r\n\r\n  // call use Effect for render data every search input\r\n  useEffect(() => {\r\n    getTempData(API_KEY, inputValue);\r\n  }, [inputValue]);\r\n}\r\n\r\nexport default Weather;\r\n"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,yCAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMQ,OAAO,GAAG,kCAAhB,CAJiB,CAMjB;;EACA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;IAClC,IAAIC,GAAG,GAAI,qDAAoDD,KAAM,uBAAsBD,GAAI,EAA/F;IACAG,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAAS;MACb,OAAOA,GAAG,CAACC,IAAJ,EAAP;IACD,CAHH,EAIGF,IAJH,CAISC,GAAD,IAAS;MACbV,OAAO,CAACU,GAAG,CAACE,IAAL,CAAP;MACAV,OAAO,CAACI,KAAD,CAAP,CAFa,CAGb;IACD,CARH,EASGO,KATH,CASUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;MACAd,OAAO,CAAC,IAAD,CAAP;IACD,CAZH;EAaD,CAfD,CAPiB,CAwBjB;;;EACAN,SAAS,CAAC,MAAM;IACdU,WAAW,CAACD,OAAD,EAAUN,UAAV,CAAX;EACD,CAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAGD;;GA5BQD,O;;KAAAA,O;AA8BT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}