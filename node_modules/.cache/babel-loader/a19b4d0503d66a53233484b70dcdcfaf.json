{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\wearther-react\\\\src\\\\components\\\\data.js\",\n    _s = $RefreshSig$();\n\nimport { toBeEmpty } from \"@testing-library/jest-dom/dist/matchers\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const API_KEY = \"2fce26b3009e0a66de8c0a0223800869\"; // function get temp data\n\n  const getTempData = (api, query) => {\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${api}`;\n    fetch(url).then(res => {\n      return res.json();\n    }).then(res => {\n      setData(res.main);\n      setCity(query); // console.log(res.main);\n    }).catch(err => {\n      console.log(\"error in get data\", err);\n      setData(null);\n    });\n  }; // call use Effect for render data every search input\n\n\n  useEffect(() => {\n    getTempData(API_KEY, inputValue);\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"weather-input-city\",\n      type: \"text\",\n      placeholder: \"Enter City Name\",\n      value: inputValue,\n      onInput: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !inputValue.length ? null : data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"weather-p-city\",\n        children: [\"Weather Details of City : \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-information-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Temperature : \", data.temp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature Range : \", data.temp_min, \" \\xB0C  to  \", data.temp_max, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity  : \", data.humidity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sea Level  : \", data.sea_level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ground Level  : \", data.grnd_level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"weather-valid-city-name\",\n      children: \"Enter Valid City Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"jC1p3Y7my/c75H5uUejvU8mcbkc=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["toBeEmpty","React","useEffect","useState","Weather","inputValue","setInputValue","data","setData","city","setCity","API_KEY","getTempData","api","query","url","fetch","then","res","json","main","catch","err","console","log","e","target","value","length","temp","temp_min","temp_max","humidity","sea_level","grnd_level"],"sources":["C:/Users/user/Documents/GitHub/wearther-react/src/components/data.js"],"sourcesContent":["import { toBeEmpty } from \"@testing-library/jest-dom/dist/matchers\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Weather() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [data, setData] = useState(null);\r\n  const [city, setCity] = useState(\"\");\r\n  const API_KEY = \"2fce26b3009e0a66de8c0a0223800869\";\r\n\r\n  // function get temp data\r\n  const getTempData = (api, query) => {\r\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${api}`;\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        setData(res.main);\r\n        setCity(query);\r\n        // console.log(res.main);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in get data\", err);\r\n        setData(null);\r\n      });\r\n  };\r\n\r\n  // call use Effect for render data every search input\r\n  useEffect(() => {\r\n    getTempData(API_KEY, inputValue);\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <div>\r\n      <input className=\"weather-input-city\"\r\n        type=\"text\"\r\n        placeholder=\"Enter City Name\"\r\n        value={inputValue}\r\n        onInput={(e) => setInputValue(e.target.value)}\r\n      />\r\n\r\n      {!inputValue.length ? null : data ? (\r\n        <div>\r\n          <p className=\"weather-p-city\">Weather Details of City : {city}</p>\r\n\r\n          <div className=\"weather-information-container\">\r\n          <p >Current Temperature : {data.temp} °C</p>\r\n          <p >Temperature Range : {data.temp_min} °C  to  {data.temp_max} °C</p>\r\n          <p >Humidity  : {data.humidity}</p>\r\n          <p >Sea Level  : {data.sea_level}</p>\r\n          <p >Ground Level  : {data.grnd_level}</p>\r\n\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"weather-valid-city-name\">Enter Valid City Name</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,yCAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMQ,OAAO,GAAG,kCAAhB,CAJiB,CAMjB;;EACA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;IAClC,IAAIC,GAAG,GAAI,qDAAoDD,KAAM,uBAAsBD,GAAI,EAA/F;IACAG,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAAS;MACb,OAAOA,GAAG,CAACC,IAAJ,EAAP;IACD,CAHH,EAIGF,IAJH,CAISC,GAAD,IAAS;MACbV,OAAO,CAACU,GAAG,CAACE,IAAL,CAAP;MACAV,OAAO,CAACI,KAAD,CAAP,CAFa,CAGb;IACD,CARH,EASGO,KATH,CASUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;MACAd,OAAO,CAAC,IAAD,CAAP;IACD,CAZH;EAaD,CAfD,CAPiB,CAwBjB;;;EACAN,SAAS,CAAC,MAAM;IACdU,WAAW,CAACD,OAAD,EAAUN,UAAV,CAAX;EACD,CAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAO,SAAS,EAAC,oBAAjB;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,iBAFd;MAGE,KAAK,EAAEA,UAHT;MAIE,OAAO,EAAGoB,CAAD,IAAOnB,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;IAJ/B;MAAA;MAAA;MAAA;IAAA,QADF,EAQG,CAACtB,UAAU,CAACuB,MAAZ,GAAqB,IAArB,GAA4BrB,IAAI,gBAC/B;MAAA,wBACE;QAAG,SAAS,EAAC,gBAAb;QAAA,yCAAyDE,IAAzD;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAK,SAAS,EAAC,+BAAf;QAAA,wBACA;UAAA,qCAA2BF,IAAI,CAACsB,IAAhC;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAA,mCAAyBtB,IAAI,CAACuB,QAA9B,kBAAiDvB,IAAI,CAACwB,QAAtD;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA;UAAA,2BAAiBxB,IAAI,CAACyB,QAAtB;QAAA;UAAA;UAAA;UAAA;QAAA,QAHA,eAIA;UAAA,4BAAkBzB,IAAI,CAAC0B,SAAvB;QAAA;UAAA;UAAA;UAAA;QAAA,QAJA,eAKA;UAAA,+BAAqB1B,IAAI,CAAC2B,UAA1B;QAAA;UAAA;UAAA;UAAA;QAAA,QALA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAD+B,gBAc/B;MAAG,SAAS,EAAC,yBAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;GAxDQ9B,O;;KAAAA,O;AA0DT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}